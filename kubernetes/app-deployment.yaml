apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: workshop
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    # alb.ingress.kubernetes.io/healthcheck-path: /health
    # alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    # alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    # alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    # alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    # alb.ingress.kubernetes.io/success-codes: '200'
    # alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/healthcheck-protocol-version: HTTP1
    # alb.ingress.kubernetes.io/healthcheck-success-codes: '200'
    # alb.ingress.kubernetes.io/healthcheck-healthy-threshold: '2'
    # alb.ingress.kubernetes.io/healthcheck-unhealthy-threshold: '2'
spec:
  ingressClassName: alb
  rules:
  - host: appchatzolo.huuwxnhax.xyz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client-service
            port:
              number: 3000
      # - path: /socket
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: socket-service
      #       port:
      #         number: 8800
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: server-service
            port:
              number: 5000
  # tls:
  # - hosts:
  #   - example.com
  #   secretName: example-tls-secret
